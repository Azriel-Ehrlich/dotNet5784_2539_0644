<Window x:Class="PL.Task.TaskDataInputWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Task"
        mc:Ignorable="d" SizeToContent="Height"
        Title="Task Data Window" MinHeight="650" Width="1100" Background="LightBlue"
        DataContext="{Binding CurrentTask, RelativeSource={RelativeSource Self}}">
    <WrapPanel>
        <!-- Display task data -->
        <StackPanel Margin="20,20,20,20">
            <WrapPanel>
                <!-- [not] amazing title -->
                <TextBlock Style="{StaticResource stTextBlock-Title}" Text="Task Data" />
            </WrapPanel>
            <Separator Opacity="0" />

            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Alias" />
                <TextBox Style="{StaticResource stTextBox}"
                 Text="{Binding Path=Task.Alias, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            </WrapPanel>
            <Separator Opacity="0" />

            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Description" />
                <TextBox Style="{StaticResource stTextBox}"
                 Text="{Binding Path=Task.Description, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
            </WrapPanel>
            <Separator Opacity="0" />

            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Remarks" />
                <TextBox Style="{StaticResource stTextBox}"
                 Text="{Binding Path=Task.Remarks, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
            </WrapPanel>
            <Separator Opacity="0" />

            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Engineer ID" />
                <TextBlock Style="{StaticResource stTextBlock}" Text="{Binding Path=Task.Engineer.Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
            </WrapPanel>
            <Separator Opacity="0" />

            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Complexity" />
                <ComboBox Style="{StaticResource stComboBox}"
                          ItemsSource="{Binding Source={StaticResource EngineerExpirieneWithoutAllCollectionKey}}"
                          SelectedValue="{Binding Path=Task.Complexity, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                          IsEnabled="{Binding Task.Status, Converter={StaticResource ConvertStatusToEnableKey}}"/>
            </WrapPanel>
            <Separator Opacity="0" />

            <!-- display dates -->
            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Start Date" />
                <TextBlock Style="{StaticResource stTextBlock}" Text="{Binding Path=Task.StartDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
            </WrapPanel>
            <Separator Opacity="0" />

            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Required Effort Time" />
                <TextBox Style="{StaticResource stTextBox}"
                     Text="{Binding Path=Task.RequiredEffortTime, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                         IsEnabled="{Binding Task.Status , Mode=OneWay,Converter={StaticResource ConvertStatusToEnableKey}}"/>
            </WrapPanel>
            <Separator Opacity="0" />

            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Scheduled Date" />
                <TextBlock Style="{StaticResource stTextBlock}" Text="{Binding Path=Task.ScheduledDate, Mode=OneWay}" />
            </WrapPanel>
            <Separator Opacity="0" />
            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Complete Date" />
                <TextBlock Style="{StaticResource stTextBlock}" Text="{Binding Path=Task.CompleteDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
            </WrapPanel>
            <Separator Opacity="0" />
            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Forecast Date" />
                <TextBlock Style="{StaticResource stTextBlock}" Text="{Binding Path=Task.ForecastDate, Mode=OneWay}" />
            </WrapPanel>
            
            <Separator Opacity="0" />
            <WrapPanel>
                <TextBlock Style="{StaticResource stTextBlock}" Text="Status" />
                <TextBlock Style="{StaticResource stTextBlock}" Text="{Binding Path=Task.Status, Mode=OneWay}" />
            </WrapPanel>

            <Separator Opacity="0" Height="30" />

            <Button Style="{StaticResource stButton}" Click="AddOrUpdateTask"
                    Content="{Binding Path=Task.Id, Mode=OneTime, Converter={StaticResource ConverIdToContentKey}}"/>
            <Separator Opacity="0" Height="30" />
            <Button Style="{StaticResource stButton}" Click="Delete_Task" Content="Delete"
                 Visibility="{Binding Task.Status,Converter={StaticResource ConvertStatusToVisibilityKey}}"   />

        </StackPanel>

        <Separator Width="10" Opacity="0" />

        <!-- Display dependencies list -->
        <StackPanel>
            <TextBlock Style="{StaticResource stTextBlock-Title}" Text="Dependencies" />
            <Separator Opacity="0" />
            <!--dataGrid of dependencies-->
            <DataGrid ItemsSource="{Binding Path=AllTasks, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                      AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" Width="500">
                <DataGrid.Columns>
                    <!-- Define a template column with a checkbox -->
                    <DataGridTemplateColumn Header="Select" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                <CheckBox Checked="AddDependency" Unchecked="RemoveDependency" IsChecked="{Binding IsChecked}"
                                          IsEnabled="{Binding Status, Converter={StaticResource ConvertStatusToEnableKey}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="50" IsReadOnly="True"/>-->
                    <DataGridTextColumn Header="Alias" Binding="{Binding Alias}" Width="200" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="250" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </WrapPanel>
</Window>
